* Combine rand with eachwhatever

So there would not be randmap, randmono anymore but
rand(eachmap(dom,cod)) and rand(eachmono(dom,cod)) and so.

Interface only - implementations would not change.

Except the EachWhatever types may then need to change to support also
rand.

* More iteration protocols

Generate all left and right inverses of a map.

Maps factor. Maps have sections and retractions.

                   ; eachorder(A)
randequivalence(A) ; randorder(A)

Need to write tests for eachequivalence(A).
Can test inclusion of diagonal, inclusion
of opposite relation, inclusion of square
relation - is inclusion test implemented?

* Should there be canonical maps?

Hm. There are the universal maps tinyset() -> A for any A and then
also A -> tinyset(1)) for any A. How does one specify those? The
former is just tinymap(A). Hm. tinymap(tinyset(1), zip(A, what)).

* Determines, is determined by

Factors through, all that ETCS.

Generalized elements.
